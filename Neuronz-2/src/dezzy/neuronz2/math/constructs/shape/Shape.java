package dezzy.neuronz2.math.constructs.shape;

import dezzy.neuronz2.math.constructs.ElementContainer;
import dezzy.neuronz2.math.utility.IndexedGenerator;

/**
 * A generalization of the shape of a tensor. This class exists so that functions can generate
 * tensors of a specific shape without knowing exactly what kind of tensor they are generating
 * (e.g., vector, matrix, etc.). This is useful for functions that need to
 * {@linkplain dezzy.neuronz2.arch.init.WeightInitFunc initialize} a tensor of some arbitrary shape.
 *
 * @author Joe Desmond
 * @param <T> tensor type
 */
public abstract class Shape<T extends ElementContainer<T>> {
	
	/**
	 * Generates a tensor with this shape by applying a function at every index.
	 * 
	 * @param generator generator function; generates elements of the tensor
	 * @return a new tensor with this shape, generated by <code>generator</code>
	 * @see IndexedGenerator
	 */
	public abstract T generate(final IndexedGenerator generator);
}
